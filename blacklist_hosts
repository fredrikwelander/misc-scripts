#!/bin/bash

# Appends external blacklist to /etc/hosts. Run as root using cron.
# First run just appends, subsequent runs replaces the appended lines.
# WARNING: Might destroy your /etc/hosts, make backup before trying out.
# THANKS TO: StevenBlack, https://github.com/StevenBlack/hosts

####### CONF #######
#
# External blacklist to append. Use this or another external hosts file entirely at your own risk.
HOSTSURL="https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts"
# Tempfile
TEMPFILE="/tmp/hosts_blacklist.tmp"
# Minimum accepted line count of blacklist
BLACKLIST_MINLINES=5000
# Whitelist hosts containing these substrings
WHITELIST=( "google-analytics" "analytics.google" "googletagmanager.com" )
#
##### CONF END ######

# Download blacklist
/usr/bin/wget -O $TEMPFILE $HOSTSURL

# Count lines in blacklist
BLACKLIST_LINES=$(grep -c "^" $TEMPFILE)

# Quick and dirty check if file is ok (long enough)
if [[ "$BLACKLIST_LINES"  -lt "$BLACKLIST_MINLINES" ]]; then
    echo "Blacklist not valid: less than $BLACKLIST_MINLINES lines."; exit;
fi

# Comment out possible spoof attempts, only allowing lines starting with 0.0.0.0 or 127.0.0.1
sed -ri '/^[[:blank:]]*0.0.0.0|^[[:blank:]]*127.0.0.1|^[[:blank:]]*#|^\s*$/! s/^/#SPOOF /g' $TEMPFILE

# Whitelist hosts by adding comment #WHITELIST to the lines
for i in "${WHITELIST[@]}"
do
	sed -e "/${i}/s/^/#WHITELIST /g" -i $TEMPFILE;
done

# Clear previously appended blacklist from /etc/hosts
/bin/sed -i.bak '/#### GENERATED BLACKLIST /'Q /etc/hosts

# Recreate separator line
echo "#### GENERATED BLACKLIST  $(date "+%Y-%m-%d %H:%M:%S") ####" >> /etc/hosts
 
# Append new blacklist to /etc/hosts
cat "$TEMPFILE" >> /etc/hosts


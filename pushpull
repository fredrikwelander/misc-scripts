#!/bin/bash

# Script for doing a quick push-pull operation from a devel repository to a 
# production repoistory. Both repositories must be in the same rootpath on the same webserver.
# Saves you the trouble of doing 'git push [wait], cd ../website, git pull [wait], cd ../website_devel. 
# Includes basic checking for correct path and branch, dirty-state and unpushed commits. 

# Last part of development directory name
DEVEL_SUFFIX="_devel"

# Working branch (both devel and production)
GITBRANCH="master"

#############
DEVEL_REPO=`pwd`
PRODUCTION_REPO=${DEVEL_REPO%$DEVEL_SUFFIX}
CUR_BRANCH=`git symbolic-ref --short HEAD`

if [[ ! "$DEVEL_REPO" == *$DEVEL_SUFFIX ]]
then
	echo "ERROR: Not in devel directory. Exiting."
	exit 1
elif [[ ! -d  $PRODUCTION_REPO ]]
then
	echo "ERROR: Production repository in $PRODUCTION_REPO not found. Exiting"
        exit 1
elif  [[ ! -d "${DEVEL_REPO}/.git" ]] || [[ ! -d "${PRODUCTION_REPO}/.git" ]]
then
        echo "ERROR: Not a git repository. Exiting."
        exit 1
fi

if [[ "$CUR_BRANCH" != "$GITBRANCH" ]]
then
        read -p "Current branch is '$CUR_BRANCH'. Checkout '$GITBRANCH' and exit?. (Enter/Ctrl-C)"
	git checkout $GITBRANCH
	exit 0
fi

if [[ "$CUR_BRANCH" != "$GITBRANCH" ]]
then
        read -p "Current branch is '$CUR_BRANCH'. Checkout '$GITBRANCH' and exit?. (Enter/Ctrl-C)"
	git checkout $GITBRANCH
	exit 0;
fi


# Commented - allow pushing from dirty devel
#git diff --quiet || { echo "ERROR: Dirty state. Exiting."; exit 1; }

cd $PRODUCTION_REPO
git diff --quiet || { echo "ERROR: Dirty state in production repository $PRODUCTION_REPO. Exiting."; exit 1; }
cd $DEVEL_REPO
UNPUSHED=`git cherry -v`
if [[ -z $UNPUSHED ]]
then
        echo "No commits to push."
        exit 0
fi

echo "Unpushed commits:
$UNPUSHED"

read -p "Push/pull $DEVEL_REPO(master)=>$PRODUCTION_REPO(master)? (Enter/Ctrl-C)"

echo "PUSHING from $DEVEL_REPO..."
git checkout $GITBRANCH
git push
cd $PRODUCTION_REPO
echo "PULLING to $PRODUCTION_REPO..."
git checkout $GITBRANCH
git pull
cd $DEVEL_REPO
exit 0

